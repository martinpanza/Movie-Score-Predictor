install.packages(c("ggplot2", "rmarkdown"))
ggplot(tipos[tipos$Muestra == "Nacional", ],
aes(x=TipoAccidente, y=Cantidad)) +
facet_grid(Anio ~ Descripcion) +
coord_flip() +
geom_bar(stat="identity")
load("~/labs/lab 1/.RData")
View(afectados)
ggplot(tipos[tipos$Muestra == "Nacional", ],
aes(x=TipoAccidente, y=Cantidad)) +
facet_grid(Anio ~ Descripcion) +
coord_flip() +
geom_bar(stat="identity")
head(tipos)
library(ggplot2)
ggplot(tipos[tipos$Muestra == "Nacional", ],
aes(x=TipoAccidente, y=Cantidad)) +
facet_grid(Anio ~ Descripcion) +
coord_flip() +
geom_bar(stat="identity")
ggplot(afectados[afectados$Muestra == "Regional", ],
aes(x=Descripcion, y=Cantidad)) +
facet_grid(Anio ~ Estado) +
coord_flip() +
geom_bar(stat="identity")
af2 <- afectados[afectados$Muestra == "Comunal", ]
ac2 <- tipos[tipos$Muestra == "Comunal", ]
af2 <- af2[af2$Anio == 2011, ]
af2 <- af2[af2$Estado == "Muertos", ]
ac2 <- ac2[ac2$Anio == 2011, ]
ag <- setNames(aggregate(ac2$Cantidad, list(ac2$Descripcion), sum), c("Descripcion", "Total"))
join <- merge(ag, poblacion, by="Descripcion")
join <- join[order(join$Descripcion),]
View(ag)
View(ac2)
View(af2)
View(join)
join <- setNames(join$Total, c("Muertos"))
undo
View(ac2)
af2 <- afectados[afectados$Muestra == "Comunal", ]
af2 <- af2[af2$Anio == 2011, ]
af2 <- af2[af2$Estado == "Muertos", ]
ac2 <- tipos[tipos$Muestra == "Comunal", ]
ac2 <- ac2[ac2$Anio == 2011, ]
ag <- setNames(aggregate(ac2$Cantidad, list(ac2$Descripcion), sum), c("Descripcion", "Muertos"))
join <- merge(ag, poblacion, by="Descripcion")
join <- join[order(join$Descripcion),]
View(join)
View(ac2)
View(ag)
View(af2)
View(ac2)
View(ag)
View(ac2)
View(ac2)
af2 <- afectados[afectados$Muestra == "Comunal", ]
af2 <- af2[af2$Anio == 2011, ]
af2 <- af2[af2$Estado == "Muertos", ]
ac2 <- tipos[tipos$Muestra == "Comunal", ]
ac2 <- ac2[ac2$Anio == 2011, ]
ag <- setNames(aggregate(ac2$Cantidad, list(ac2$Descripcion), sum), c("Descripcion", "Total"))
View(ag)
join <- merge(af2, poblacion, by="Descripcion")
join <- join[order(join$Descripcion),]
joincorto <- join
joincorto$Muestra <- NULL
View(joincorto)
joincorto$Anio <- NULL
joincorto$Estado <- NULL
joincorto <- setNames(joincorto, c("Descripcion", "Muertos", "Poblacion"))
muertos <- data.frame(joincorto, ag)
View(muertos)
muertos$Descripcion.1 <- NULL
View(tipos)
muertos <- data.frame(joincorto, ag, MuertosxAccidente = 10000 * (joincorto$Muertos/ag$Total))
muertos$Descripcion.1 <- NULL
muertos[,"MuertosxAccidente"] = round(muertos[,"MuertosxAccidente"])
muertos <- muertos[order(muertos$MuertosxAccidente),]
muertos2 <- muertos[complete.cases(muertos),]
View(muertos2)
View(muertos)
muertos <- data.frame(joincorto, ag)
View(muertos)
View(muertos2)
muertos$Descripcion.1 <- NULL
muertos <- data.frame(joincorto, ag, Resultado = joincorto$Poblacion/10000) * (joincorto$Muertos/ag$Total))
muertos <- data.frame(joincorto, ag, Resultado = (joincorto$Poblacion/10000) * (joincorto$Muertos/ag$Total))
muertos$Descripcion.1 <- NULL
muertos[,"Resultado"] = round(muertos[,"Resultado"])
View(muertos2)
muertos <- muertos[order(muertos$Resultado),]
muertos[complete.cases(muertos),]
muertos2 <- muertos[complete.cases(muertos),]
muertos <- muertos[order(-muertos$Resultado),]
muertos2 <- muertos2[order(-muertos2$Resultado),]
final <- muertos2[1:10,]
View(final)
final$Muertos <- NULL
final$Total <- NULL
final$Poblacion <- NULL
plot(final)
View(final)
ggplot(final, aes(x=Descripcion, y=Resultado)) +
geom_bar(stat="identity") +
coord_flip() +
ggtitle("Muertes por accidente por cada diez mil habitantes durante 2011")
ggplot(final, aes(x=Descripcion, y=Resultado)) +
geom_bar(stat="identity") +
coord_flip() +
ggtitle("Comunas con mayor cantidad de muertes por accidente por cada diez mil habitantes durante 2011")
View(final)
library(ggplot2)
muertos <- data.frame(joincorto, ag, Resultado = (joincorto$Poblacion/10000) * (joincorto$Muertos/ag$Total))
View(muertos)
muertos$Descripcion.1 <- NULL
muertos[complete.cases(muertos),]
muertos2 <- muertos[complete.cases(muertos),]
muertos <- muertos[order(-muertos$Resultado),]
muertos2 <- muertos2[order(-muertos2$Resultado),]
final <- muertos2[1:10,]
final$Muertos <- NULL
final$Total <- NULL
final$Poblacion <- NULL
View(final)
ggplot(final, aes(x=Descripcion, y=Resultado)) +
geom_bar(stat="identity") +
coord_flip() +
ggtitle("Comunas con mayor cantidad de muertes por accidente por cada diez mil habitantes durante 2011")
ggplot(final, aes(x=Resultado, y=Descripcion)) +
geom_bar(stat="identity") +
ggtitle("Comunas con mayor cantidad de muertes por accidente por cada diez mil habitantes durante 2011")
ggplot(final, aes(x=Descripcion, y=Resultado)) +
geom_bar(stat="identity") +
coord_flip() +
ggtitle("Comunas con mayor cantidad de muertes por accidente por cada diez mil habitantes durante 2011")
ggplot(afectados[afectados$Muestra == "Regional", ],
aes(x=Descripcion, y=Cantidad)) +
facet_grid(Anio ~ Estado) +
coord_flip() +
geom_bar(stat="identity")
library(ggplot2)
ggplot(afectados[afectados$Muestra == "Regional", ],
aes(x=Descripcion, y=Cantidad)) +
facet_grid(Anio ~ Estado) +
coord_flip() +
geom_bar(stat="identity")
load("~/labs/lab 2/.RData")
load("~/labs/lab 2/.RData")
View(por_concepto)
library(reshape)
d2 <- melt(por_concepto, id=c("tipo", "concepto"))
d2 <- d2[order(-d2$value),]
valor <- by(d2, d2[, c("tipo", "concepto")], head, 10)
dd <- Reduce(rbind, valor)
summary(dd)
ag <- aggregate(por_region[, 4:6982], list(por_region$region), mean)
View(ag)
ag <- ag[,2:6980]*10000
ag <- aggregate(por_region[, 4:6982], list(por_region$region), mean)
ag[,2:6980] <- ag[,2:6980]*10000
pca <- prcomp(ag)
ag <- aggregate(por_region[, 4:6982], list(por_region$region), mean)
pca <- prcomp(ag[, 2:6980])
d <- data.frame(pca$x[, 1:2], region=por_region_agg$Group.1)
d <- data.frame(pca$x[, 1:2], region=ag$Group.1)
View(d)
ggplot(d, aes(x=PC1, y=PC2, label=region)) +
geom_point() +
geom_text(vjust=-1)
library(ggplot2)
ggplot(d, aes(x=PC1, y=PC2, label=region)) +
geom_point() +
geom_text(vjust=-1)
v <- apply(ag, 2, var)
v <- v[order(-v)]
head(v, 20)
plot(pca)
View(n)
..
load("~/Mineria/ArchivosFiltrados_(SinUso)/Movie-Score-Predictor/Datasets/.RData")
View(Libro1)
View(movies)
View(movies2)
setwd("~/Mineria/ArchivosFiltrados_(SinUso)/Movie-Score-Predictor/Datasets")
definitivocsv <- read.csv("~/Mineria/ArchivosFiltrados_(SinUso)/Movie-Score-Predictor/Datasets/definitivocsv.csv", encoding="UTF-8", sep=";")
View(definitivocsv)
definitivocsv$genres <- NULL
View(definitivocsv)
write.csv(definitivocsv)
