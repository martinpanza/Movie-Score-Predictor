geom_density(size = 0.5,adjust = 0.7, alfa = 0,1) +
labs(title = "Densidad de Ratings por Categoría",x = "Ratings",y = "Densidad",colour = "Categorías") +
xlim(1,10)
ggplot(by_category,aes(x=by_category$imdb_score, colour = by_category$category,fill = by_category$category)) +
geom_density(size = 0.5,adjust = 0.7, alfa = 0,1) +
labs(title = "Densidad de Ratings por Categoría",x = "Ratings",y = "Densidad",colour = "Categorías") +
xlim(1,10)
ggplot(by_category,aes(x=by_category$imdb_score, colour = by_category$category,fill = by_category$category)) +
geom_density(size = 0.5,adjust = 0.7, alfa = 0,1) +
labs(title = "Densidad de Ratings por Categoría",x = "Ratings",y = "Densidad",colour = "Categorías") +
xlim(1,10)
ggplot(by_category,aes(x=by_category$imdb_score, colour = by_category$category,fill = by_category$category)) +
geom_density(size = 0.5,adjust = 0.7, alfa = 0,1) +
labs(title = "Densidad de Ratings por Categoría",x = "Ratings",y = "Densidad",colour = "Categorías") +
xlim(1,10)
ggplot(by_category,aes(x=by_category$imdb_score, colour = by_category$category,fill = by_category$category, alfa = 0,1)) +
geom_density(size = 0.5,adjust = 0.7,) +
labs(title = "Densidad de Ratings por Categoría",x = "Ratings",y = "Densidad",colour = "Categorías") +
xlim(1,10)
ggplot(by_category,aes(x=by_category$imdb_score, colour = by_category$category,fill = by_category$category)) +
geom_density(size = 0.5,adjust = 0.7,) +
labs(title = "Densidad de Ratings por Categoría",x = "Ratings",y = "Densidad",colour = "Categorías") +
xlim(1,10)
ggplot(by_category,aes(x=by_category$imdb_score, colour = by_category$category,fill = by_category$category)) +
geom_density(size = 0.5,adjust = 0.7,alpha = 0.1) +
labs(title = "Densidad de Ratings por Categoría",x = "Ratings",y = "Densidad",colour = "Categorías") +
xlim(1,10)
ggplot(by_category,aes(x=by_category$imdb_score, colour = by_category$category,fill = by_category$category)) +
geom_density(size = 0.5,adjust = 0.7,alpha = 0.3) +
labs(title = "Densidad de Ratings por Categoría",x = "Ratings",y = "Densidad",colour = "Categorías") +
xlim(1,10)
ggplot(by_category,aes(x=by_category$imdb_score, colour = by_category$category)) +
geom_density(size = 0.5,adjust = 0.7) +
labs(title = "Densidad de Ratings por Categoría",x = "Ratings",y = "Densidad",colour = "Categorías") +
xlim(1,10)
ggplot(by_category,aes(x=by_category$imdb_score, colour = by_category$category)) +
geom_density(size = 0.5,adjust = 0.7,position = "stack") +
labs(title = "Densidad de Ratings por Categoría",x = "Ratings",y = "Densidad",colour = "Categorías") +
xlim(1,10)
ggplot(by_category,aes(x=by_category$imdb_score, colour = by_category$category)) +
geom_density(size = 0.5,adjust = 0.7) +
labs(title = "Densidad de Ratings por Categoría",x = "Ratings",y = "Densidad",colour = "Categorías") +
xlim(1,10)
ggplot(by_category,aes(x=by_category$imdb_score, colour = by_category$category)) +
geom_density(size = 0.5,adjust = 0.7,position = "fill") +
labs(title = "Densidad de Ratings por Categoría",x = "Ratings",y = "Densidad",colour = "Categorías") +
xlim(1,10)
---
View(movies)
ggplot(by_numberofRatings,aes(x=by_numberofRatings$rating, colour = by_numberofRatings$title)) +
geom_density(size = 0.5,adjust = 2) +
labs(title = "Densidad de Ratings por película",x = "Ratings",y = "Densidad",colour = "Categorías")
ggplot(by_numberofRatings,aes(x=by_numberofRatings$rating, colour = by_numberofRatings$title)) +
geom_density(size = 0.5,adjust = 1) +
labs(title = "Densidad de Ratings por película",x = "Ratings",y = "Densidad",colour = "Categorías")
ggplot(by_numberofRatings,aes(x=by_numberofRatings$rating, colour = by_numberofRatings$title)) +
geom_density(size = 0.5,adjust = 0) +
labs(title = "Densidad de Ratings por película",x = "Ratings",y = "Densidad",colour = "Categorías")
ggplot(by_numberofRatings,aes(x=by_numberofRatings$rating, colour = by_numberofRatings$title)) +
geom_density(size = 0.5,adjust = 0,1) +
labs(title = "Densidad de Ratings por película",x = "Ratings",y = "Densidad",colour = "Categorías")
ggplot(by_numberofRatings,aes(x=by_numberofRatings$rating, colour = by_numberofRatings$title)) +
geom_density(size = 0.5,adjust = 0.1) +
labs(title = "Densidad de Ratings por película",x = "Ratings",y = "Densidad",colour = "Categorías")
ggplot(by_numberofRatings,aes(x=by_numberofRatings$rating, colour = by_numberofRatings$title)) +
geom_density(size = 0.5,adjust = 0.5) +
labs(title = "Densidad de Ratings por película",x = "Ratings",y = "Densidad",colour = "Categorías")
ggplot(by_numberofRatings,aes(x=by_numberofRatings$rating, colour = by_numberofRatings$title)) +
geom_density(size = 0.5,adjust = 1.5) +
labs(title = "Densidad de Ratings por película",x = "Ratings",y = "Densidad",colour = "Categorías")
ggplot(by_numberofRatings,aes(x=by_numberofRatings$rating, colour = by_numberofRatings$title)) +
geom_histogram(binwidth=.5, alpha=.2, position="identity") +
labs(title = "Frecuencia de Ratings segun pelicula",x = "Ratings",y = "Frecuencia",colour = "Categorías")+
xlim(0,5)
ggplot(by_numberofRatings,aes(x=by_numberofRatings$rating, colour = by_numberofRatings$title)) +
geom_bar(size = 0.5,adjust = 1.5) +
labs(title = "Densidad de Ratings por película",x = "Ratings",y = "Densidad",colour = "Categorías")
ggplot(by_numberofRatings,aes(x=by_numberofRatings$rating, colour = by_numberofRatings$title)) +
geom_bar(size = 0.5) +
labs(title = "Densidad de Ratings por película",x = "Ratings",y = "Densidad",colour = "Categorías")
ggplot(by_numberofRatings,aes(x=by_numberofRatings$rating, colour = by_numberofRatings$title)) +
geom_bar(size = 0.5, position = "dodge") +
labs(title = "Densidad de Ratings por película",x = "Ratings",y = "Densidad",colour = "Categorías")
qplot(movie_metadata$duration,movie_metadata$imdb_score, asp = 0.8) +
labs( title = "Ranking vs Duración", x = "Duración", y = "Rating")
View(movie_metadata)
de_niro <- movie_metadata[grepl("robert de niro",movie_metadata$actor_1_name)|grepl("robert de niro",movie_metadata$actor_2_name)|grepl("robert de niro",movie_metadata$actor_3_name)]
View(de_niro)
View(de_niro)
View(de_niro)
de_niro <- movie_metadata[grepl("robert de niro",movie_metadata$actor_1_name)|grepl("robert de niro",movie_metadata$actor_2_name)|grepl("robert de niro",movie_metadata$actor_3_name),]
View(de_niro)
de_niro <- movie_metadata[grepl("niro",movie_metadata$actor_1_name)|grepl("robert de niro",movie_metadata$actor_2_name)|grepl("robert de niro",movie_metadata$actor_3_name),]
de_niro <- movie_metadata[grepl("Robert De Niro",movie_metadata$actor_1_name)]
de_niro <- movie_metadata[grepl("Robert De Niro",movie_metadata$actor_1_name),]
View(de_niro)
de_niro <- movie_metadata[grepl("Robert De Niro",movie_metadata$actor_2_name),]
de_niro <- movie_metadata[grepl("Robert De Niro",movie_metadata$actor_1_name)|grepl("robert de niro",movie_metadata$actor_2_name)|]
de_niro <- movie_metadata[grepl("Robert De Niro",movie_metadata$actor_1_name)|grepl("robert de niro",movie_metadata$actor_2_name)|,]
de_niro <- movie_metadata[grepl("Robert De Niro",movie_metadata$actor_1_name)|grepl("robert de niro",movie_metadata$actor_2_name),]
View(de_niro)
de_niro <- movie_metadata[grepl("Robert De Niro",movie_metadata$actor_1_name)|grepl("Robert De Niro",movie_metadata$actor_2_name)|grepl("Robert De Niro",movie_metadata$actor_3_name),]
summary(movies_metadata)
View(movie_metadata)
View(movie_metadata)
summary(movie_metadata$actor_1_name)
summary(movie_metadata$actor_1_name | movie_metadata$actor_2_name)
summary(movie_metadata$actor_2_name)
nicolas_cage <- movie_metadata[grepl("Nicolas Cage",movie_metadata$actor_1_name)|grepl("Nicolas Cage",movie_metadata$actor_2_name)|grepl("Nicolas Cage",movie_metadata$actor_3_name),]
View(nicolas_cage)
View(ratings)
ljñlk
kljlñkj
ojñjklj
mean(ratings$movieId %in% 78893)
mean(ratings$rating[ratings$movieId %in% 78893,])
mean(ratings$rating[ratings$movieId %in% 78893,])
brad_pitt <- movie_metadata[grepl("Brad Pitt",movie_metadata$actor_1_name)|grepl("Brad Pitt",movie_metadata$actor_2_name)|grepl("Brad Pitt",movie_metadata$actor_3_name),]
brad_pitt <- movie_metadata[grepl("Brad Pitt",movie_metadata$actor_1_name)|grepl("Brad Pitt",movie_metadata$actor_2_name)|grepl("Brad Pitt",movie_metadata$actor_3_name),]
View(brad_pitt)
mean(ratings$rating[ratings$movieId %in% 78893,])summary(movie_metadata$actor_1_name)
summary(movie_metadata$actor_2_name)
summary(movie_metadata$actor_3_name)
summary(movie_metadata$actor_2_name)
meryl_streep <- movie_metadata[grepl("Meryl",movie_metadata$actor_1_name)|grepl("Meryl",movie_metadata$actor_2_name)|grepl("Meryl",movie_metadata$actor_3_name),]
View(de_niro)
View(meryl_streep)
charlize_theron <- movie_metadata[grepl("Charlize Theron",movie_metadata$actor_1_name)|grepl("Charlize Theron", movie_metadata$actor_2_name)|grepl("Charlize Theron",movie_metadata$actor_3_name),]
View(charlize_theron)
de_niro,nicolas_cage,brad_pitt,meryl_streep,charlize_theron
de_niro <- movie_metadata[grepl("Robert De Niro",movie_metadata$actor_1_name)|grepl("Robert De Niro",movie_metadata$actor_2_name)|grepl("Robert De Niro",movie_metadata$actor_3_name),]
nicolas_cage <- movie_metadata[grepl("Nicolas Cage",movie_metadata$actor_1_name)|grepl("Nicolas Cage",movie_metadata$actor_2_name)|grepl("Nicolas Cage",movie_metadata$actor_3_name),]
brad_pitt <- movie_metadata[grepl("Brad Pitt",movie_metadata$actor_1_name)|grepl("Brad Pitt",movie_metadata$actor_2_name)|grepl("Brad Pitt",movie_metadata$actor_3_name),]
meryl_streep <- movie_metadata[grepl("Meryl",movie_metadata$actor_1_name)|grepl("Meryl",movie_metadata$actor_2_name)|grepl("Meryl",movie_metadata$actor_3_name),]
charlize_theron <- movie_metadata[grepl("Charlize Theron",movie_metadata$actor_1_name)|grepl("Charlize Theron", movie_metadata$actor_2_name)|grepl("Charlize Theron",movie_metadata$actor_3_name),]
by_actor <- rbind(de_niro,nicolas_cage,brad_pitt,meryl_streep,charlize_theron)
View(by_actor)
de_niro$actor <- "Robert de Niro"
nicolas_cage$actor <- "Nicolas Cage"
brad_pitt$actor <- "Brad Pitt"
meryl_streep$actor <- "Meryl Streep"
charlize_theron$actor <- "Charlize Theron"
by_actor <- rbind(de_niro,nicolas_cage,brad_pitt,meryl_streep,charlize_theron)
View(by_actor)
by_actor <- rbind(de_niro,nicolas_cage,brad_pitt,meryl_streep,charlize_theron)[,c(16,13,26,31)]
View(by_actor)
ggplot(by_actor,aes(x=by_actor$rating, colour = by_actor$imdb_score)) +
geom_density(size = 0.5,adjust = 1.5) +
labs(title = "Densidad de Ratings por película",x = "Ratings",y = "Densidad",colour = "Categorías")
library(stringr)
library(ggplot2)
ggplot(by_actor,aes(x=by_actor$rating, colour = by_actor$imdb_score)) +
geom_density(size = 0.5,adjust = 1.5) +
labs(title = "Densidad de Ratings por película",x = "Ratings",y = "Densidad",colour = "Categorías")
ggplot(by_actor,aes(x=by_actor$imdb_score, colour = by_actor$actor)) +
geom_density(size = 0.5,adjust = 1.5) +
labs(title = "Densidad de Ratings por película",x = "Ratings",y = "Densidad",colour = "Categorías")
ggplot(by_actor,aes(x=by_actor$imdb_score, colour = by_actor$actor)) +
geom_density(size = 0.5,adjust = 0.5) +
labs(title = "Densidad de Ratings por Actor",x = "Ratings",y = "Densidad",colour = "Actores")
ggplot(by_actor,aes(x=by_actor$imdb_score, colour = by_actor$actor)) +
geom_density(size = 0.5,adjust = 0.8) +
labs(title = "Densidad de Ratings por Actor",x = "Ratings",y = "Densidad",colour = "Actores")
ggplot(by_actor,aes(x=by_actor$imdb_score, colour = by_actor$actor)) +
geom_density(size = 0.5,adjust = 1) +
labs(title = "Densidad de Ratings por Actor",x = "Ratings",y = "Densidad",colour = "Actores")
ggplot(by_actor,aes(x=by_actor$imdb_score, colour = by_actor$actor)) +
geom_density(size = 0.5,adjust = 1) +
labs(title = "Densidad de Ratings por Actor",x = "Ratings",y = "Densidad",colour = "Actores") +
xlim(0,10)
la_roca <- movie_metadata[grepl("Dwayne Johnson",movie_metadata$actor_1_name)|grepl("Dwayne Johnson", movie_metadata$actor_2_name)|grepl("Dwayne Johnson",movie_metadata$actor_3_name),]
la_roca$actor <- "La Roca"
by_actor <- rbind(de_niro,nicolas_cage,brad_pitt,meryl_streep,charlize_theron,la_roca)[,c(16,13,26,31)]
ggplot(by_actor,aes(x=by_actor$imdb_score, colour = by_actor$actor)) +
geom_density(size = 0.5,adjust = 1) +
labs(title = "Densidad de Ratings por Actor",x = "Ratings",y = "Densidad",colour = "Actores") +
xlim(0,10)
ggplot(by_actor,aes(x=by_actor$imdb_score, colour = by_actor$actor)) +
geom_density(size = 0.8,adjust = 1) +
labs(title = "Densidad de Ratings por Actor",x = "Ratings",y = "Densidad",colour = "Actores") +
xlim(0,10)
de_niro <- movie_metadata[grepl("Robert De Niro",movie_metadata$actor_1_name)|grepl("Robert De Niro",movie_metadata$actor_2_name)|grepl("Robert De Niro",movie_metadata$actor_3_name),]
nicolas_cage <- movie_metadata[grepl("Nicolas Cage",movie_metadata$actor_1_name)|grepl("Nicolas Cage",movie_metadata$actor_2_name)|grepl("Nicolas Cage",movie_metadata$actor_3_name),]
brad_pitt <- movie_metadata[grepl("Brad Pitt",movie_metadata$actor_1_name)|grepl("Brad Pitt",movie_metadata$actor_2_name)|grepl("Brad Pitt",movie_metadata$actor_3_name),]
meryl_streep <- movie_metadata[grepl("Meryl",movie_metadata$actor_1_name)|grepl("Meryl",movie_metadata$actor_2_name)|grepl("Meryl",movie_metadata$actor_3_name),]
la_roca <- movie_metadata[grepl("Dwayne Johnson",movie_metadata$actor_1_name)|grepl("Dwayne Johnson", movie_metadata$actor_2_name)|grepl("Dwayne Johnson",movie_metadata$actor_3_name),]
de_niro$actor <- "Robert de Niro"
nicolas_cage$actor <- "Nicolas Cage"
brad_pitt$actor <- "Brad Pitt"
meryl_streep$actor <- "Meryl Streep"
la_roca$actor <- "La Roca"
by_actor <- rbind(de_niro,nicolas_cage,brad_pitt,meryl_streep,charlize_theron,la_roca)[,c(16,13,26,31)]
ggplot(by_actor,aes(x=by_actor$imdb_score, colour = by_actor$actor)) +
geom_density(size = 0.8,adjust = 1) +
labs(title = "Densidad de Ratings por Actor",x = "Ratings",y = "Densidad",colour = "Actores") +
xlim(0,10)
by_actor <- rbind(de_niro,nicolas_cage,brad_pitt,meryl_streep,la_roca)[,c(16,13,26,31)]
ggplot(by_actor,aes(x=by_actor$imdb_score, colour = by_actor$actor)) +
geom_density(size = 0.8,adjust = 1) +
labs(title = "Densidad de Ratings por Actor",x = "Ratings",y = "Densidad",colour = "Actores") +
xlim(0,10)
# Ranking vs categoria
# Uso grepl (regex) para encontrar la categoria dentro de la lista y poder obtener todos los pertenecientes a ella
#limpieza de los datos
#V2
comedy <- movies[grepl("Comedy",movies$genres.x)|grepl("Comedy",movies$genres.y),]
action <- movies[grepl("Action",movies$genres.x)|grepl("Action",movies$genres.y),]
drama <- movies[grepl("Drama",movies$genres.x)|grepl("Drama",movies$genres.y),]
horror <- movies[grepl("Horror",movies$genres.x)|grepl("Horror",movies$genres.y),]
animation <- movies[grepl("Animation",movies$genres.x)|grepl("Animation",movies$genres.y),]
comedy$category <- "Comedy"
action$category <- "Action"
sci_fi$category <- "Sci-Fi"
drama$category <- "Drama"
horror$category <- "Horror"
animation$category <- "Animation"
by_category <- rbind(comedy,action,drama,horror,animation)[,c(1,8,9)]
###Distribucion
ggplot(by_category,aes(x=by_category$imdb_score, colour = by_category$category)) +
geom_density(size = 0.5,adjust = 0.7) +
labs(title = "Densidad de Ratings por Categoría",x = "Ratings",y = "Densidad",colour = "Categorías") +
xlim(1,10)
###Histograma
ggplot(by_category,aes(x=by_category$imdb_score, colour = by_category$category)) +
geom_point(alpha=.5, position="identity") +
labs(title = "Frecuencia de Ratings por Categoría",x = "Ratings",y = "Frecuencia",colour = "Categorías")+
xlim(0,10)
# Ranking vs categoria
# Uso grepl (regex) para encontrar la categoria dentro de la lista y poder obtener todos los pertenecientes a ella
#limpieza de los datos
#V2
comedy <- movies[grepl("Comedy",movies$genres.x)|grepl("Comedy",movies$genres.y),]
action <- movies[grepl("Action",movies$genres.x)|grepl("Action",movies$genres.y),]
drama <- movies[grepl("Drama",movies$genres.x)|grepl("Drama",movies$genres.y),]
horror <- movies[grepl("Horror",movies$genres.x)|grepl("Horror",movies$genres.y),]
animation <- movies[grepl("Animation",movies$genres.x)|grepl("Animation",movies$genres.y),]
comedy$category <- "Comedy"
action$category <- "Action"
sci_fi$category <- "Sci-Fi"
drama$category <- "Drama"
horror$category <- "Horror"
animation$category <- "Animation"
by_category <- rbind(comedy,action,drama,horror,animation)[,c(1,8,9)]
###Distribucion
ggplot(by_category,aes(x=by_category$imdb_score, colour = by_category$category)) +
geom_density(size = 0.5,adjust = 0.7) +
labs(title = "Densidad de Ratings por Categoría",x = "Ratings",y = "Densidad",colour = "Categorías") +
xlim(1,10)
###Histograma
ggplot(by_category,aes(x=by_category$imdb_score, colour = by_category$category)) +
geom_point(alpha=.5, position="identity") +
labs(title = "Frecuencia de Ratings por Categoría",x = "Ratings",y = "Frecuencia",colour = "Categorías")+
xlim(0,10)
# Ranking vs categoria
# Uso grepl (regex) para encontrar la categoria dentro de la lista y poder obtener todos los pertenecientes a ella
#limpieza de los datos
#V2
comedy <- movies[grepl("Comedy",movies$genres.x)|grepl("Comedy",movies$genres.y),]
action <- movies[grepl("Action",movies$genres.x)|grepl("Action",movies$genres.y),]
drama <- movies[grepl("Drama",movies$genres.x)|grepl("Drama",movies$genres.y),]
horror <- movies[grepl("Horror",movies$genres.x)|grepl("Horror",movies$genres.y),]
animation <- movies[grepl("Animation",movies$genres.x)|grepl("Animation",movies$genres.y),]
comedy$category <- "Comedy"
action$category <- "Action"
drama$category <- "Drama"
horror$category <- "Horror"
animation$category <- "Animation"
by_category <- rbind(comedy,action,drama,horror,animation)[,c(1,8,9)]
###Distribucion
ggplot(by_category,aes(x=by_category$imdb_score, colour = by_category$category)) +
geom_density(size = 0.5,adjust = 0.7) +
labs(title = "Densidad de Ratings por Categoría",x = "Ratings",y = "Densidad",colour = "Categorías") +
xlim(1,10)
###Histograma
ggplot(by_category,aes(x=by_category$imdb_score, colour = by_category$category)) +
geom_point(alpha=.5, position="identity") +
labs(title = "Frecuencia de Ratings por Categoría",x = "Ratings",y = "Frecuencia",colour = "Categorías")+
xlim(0,10)
View(by_category)
#V2
comedy <- movies[grepl("Comedy",movies$genres.x)|grepl("Comedy",movies$genres.y),]
action <- movies[grepl("Action",movies$genres.x)|grepl("Action",movies$genres.y),]
drama <- movies[grepl("Drama",movies$genres.x)|grepl("Drama",movies$genres.y),]
horror <- movies[grepl("Horror",movies$genres.x)|grepl("Horror",movies$genres.y),]
animation <- movies[grepl("Animation",movies$genres.x)|grepl("Animation",movies$genres.y),]
comedy$category <- "Comedy"
action$category <- "Action"
drama$category <- "Drama"
horror$category <- "Horror"
animation$category <- "Animation"
by_category <- rbind(comedy,action,drama,horror,animation)[,c(1,8,9)]
ggplot(by_category,aes(x=by_category$imdb_score, colour = by_category$category)) +
geom_density(size = 0.5,adjust = 0.7) +
labs(title = "Densidad de Ratings por Categoría",x = "Ratings",y = "Densidad",colour = "Categorías") +
xlim(1,10)
ggplot(by_category,aes(x=by_category$imdb_score, colour = by_category$category)) +
geom_point(alpha=.5, position="identity") +
labs(title = "Frecuencia de Ratings por Categoría",x = "Ratings",y = "Frecuencia",colour = "Categorías")+
xlim(0,10)
ggplot(by_category,aes(x=by_category$imdb_score, colour = by_category$category)) +
geom_point(alpha=.5) +
labs(title = "Frecuencia de Ratings por Categoría",x = "Ratings",y = "Frecuencia",colour = "Categorías")+
xlim(0,10)
ggplot(by_category,aes(x=by_category$imdb_score, colour = by_category$category)) +
geom_point(alpha=.5) +
labs(title = "Frecuencia de Ratings por Categoría",x = "Ratings",y = "Frecuencia",colour = "Categorías")+
xlim(0,10)
ggplot(by_category,aes(x=by_category$imdb_score, colour = by_category$category)) +
geom_point(alpha=.5) +
labs(title = "Frecuencia de Ratings por Categoría",x = "Ratings",y = "Frecuencia",colour = "Categorías")+
xlim(0,10)
ggplot(by_category,aes(x=by_category$imdb_score, colour = by_category$category)) +
geom_point(alpha=.5) +
labs(title = "Frecuencia de Ratings por Categoría",x = "Ratings",y = "Frecuencia",colour = "Categorías")+
xlim(0,10)
ggplot(by_category,aes(x=by_category$imdb_score, colour = by_category$category)) +
geom_bar(alpha=.5) +
labs(title = "Frecuencia de Ratings por Categoría",x = "Ratings",y = "Frecuencia",colour = "Categorías")+
xlim(0,10)
View(tags)
summary(tags%tag)
summary(tags%tag)
summary(tags)
as.factor(tags%tag)
tags%tag<- as.factor(tags%tag)
tags%tag <- as.factor(tags%tag)
gary_oldman <- movie_metadata[grepl("Gary Oldman",movie_metadata$actor_1_name)|grepl("Gary Oldman", movie_metadata$actor_2_name)|grepl("Gary Oldman",movie_metadata$actor_3_name),]
gary_oldman$actor <- "Gary Oldman"
by_actor <- rbind(de_niro,nicolas_cage,brad_pitt,meryl_streep,la_roca,gary_oldman)[,c(16,13,26,31)]
ggplot(by_actor,aes(x=by_actor$imdb_score, colour = by_actor$actor)) +
geom_density(size = 0.8,adjust = 1) +
labs(title = "Densidad de Ratings por Actor",x = "Ratings",y = "Densidad",colour = "Actores") +
xlim(0,10)
gary_oldman <- movie_metadata[grepl("Gary Oldman",movie_metadata$actor_1_name),]
by_actor <- rbind(de_niro,nicolas_cage,brad_pitt,meryl_streep,la_roca,gary_oldman)[,c(16,13,26,31)]
ggplot(by_actor,aes(x=by_actor$imdb_score, colour = by_actor$actor)) +
geom_density(size = 0.8,adjust = 1) +
labs(title = "Densidad de Ratings por Actor",x = "Ratings",y = "Densidad",colour = "Actores") +
xlim(0,10)
gary_oldman <- movie_metadata[grepl("Gary Oldman",movie_metadata$actor_1_name),]
gary_oldman <- movie_metadata[grepl("Gary Oldman",movie_metadata$actor_1_name),]
#ActoresVSRatings
de_niro <- movie_metadata[grepl("Robert De Niro",movie_metadata$actor_1_name)|grepl("Robert De Niro",movie_metadata$actor_2_name)|grepl("Robert De Niro",movie_metadata$actor_3_name),]
nicolas_cage <- movie_metadata[grepl("Nicolas Cage",movie_metadata$actor_1_name)|grepl("Nicolas Cage",movie_metadata$actor_2_name)|grepl("Nicolas Cage",movie_metadata$actor_3_name),]
brad_pitt <- movie_metadata[grepl("Brad Pitt",movie_metadata$actor_1_name)|grepl("Brad Pitt",movie_metadata$actor_2_name)|grepl("Brad Pitt",movie_metadata$actor_3_name),]
meryl_streep <- movie_metadata[grepl("Meryl",movie_metadata$actor_1_name)|grepl("Meryl",movie_metadata$actor_2_name)|grepl("Meryl",movie_metadata$actor_3_name),]
la_roca <- movie_metadata[grepl("Dwayne Johnson",movie_metadata$actor_1_name)|grepl("Dwayne Johnson", movie_metadata$actor_2_name)|grepl("Dwayne Johnson",movie_metadata$actor_3_name),]
gary_oldman <- movie_metadata[grepl("Gary Oldman",movie_metadata$actor_1_name),]
de_niro$actor <- "Robert de Niro"
nicolas_cage$actor <- "Nicolas Cage"
brad_pitt$actor <- "Brad Pitt"
meryl_streep$actor <- "Meryl Streep"
la_roca$actor <- "La Roca"
gary_oldman$actor <- "Gary Oldman"
by_actor <- rbind(de_niro,nicolas_cage,brad_pitt,meryl_streep,la_roca,gary_oldman)[,c(16,13,26,31)]
ggplot(by_actor,aes(x=by_actor$imdb_score, colour = by_actor$actor)) +
geom_density(size = 0.8,adjust = 1) +
labs(title = "Densidad de Ratings por Actor",x = "Ratings",y = "Densidad",colour = "Actores") +
xlim(0,10)
tags%tag <- factor(tags%tag)
tags%tag <- factortags%tag
View(tags)
tags$tag <- factor(tags$tag)
summary(tags$tag)
View(tags)
head(summary())
summary(tags)
summary(tags%tags)
summary(tags%tag)
summary(tags$tag)
tags <- read.csv("~/Escritorio/Mineria/Proyecto/Datasets/tags.csv")
tags <- merge(tags,movie_metadata,by.x = "movieId",by.y = "movieId")
tags <- tags [,1:4]
tags$tag <- tolower(tags$tag)
Tarea.1.IN3401...Primavera.2016 <- read.csv("~/Escritorio/Estadistica/Tarea1/Tarea 1 IN3401 - Primavera 2016.csv")
View(Tarea.1.IN3401...Primavera.2016)
View(Tarea.1.IN3401...Primavera.2016)
View(Tarea.1.IN3401...Primavera.2016)
T1 <- read.csv("~/Escritorio/Estadistica/Tarea1/Tarea 1 IN3401 - Primavera 2016.csv")
View(T1)
install.packages('seriation')
library(seriation)
GenerateCubiclePoints <- function(nrPoints, nrDim, center=rep(0,nrDim), l=1){
x <-  matrix(runif(nrPoints*nrDim,-1,1),ncol=nrDim)
x <-  as.data.frame(
t(apply(x*(l/2),1,'+',center))
)
names(x) <- make.names(seq_len(nrDim))
x
}
set.seed(50551178)
rsamp <- GenerateCubiclePoints(300,2,c(2,2),l=4)
str(rsamp)
summary(rsamp)
plot(rsamp$X1,rsamp$X2)
#Iris Dataset
data('iris')
str(iris)
iris.scaled <- scale(iris[, -5])
summary(iris.scaled)
pairs(~ Sepal.Length + Sepal.Width + Petal.Length + Petal.Width, data=iris.scaled, col=iris$Species)
n_clusters <- 2
set.seed(50551178)
km.rand <- kmeans(rsamp, n_clusters)
plot(rsamp, col=km.rand$cluster, main="K-Means sobre random dataset")
n_clusters <- 3
set.seed(50551178)
km.rand <- kmeans(rsamp, n_clusters)
plot(rsamp, col=km.rand$cluster, main="K-Means sobre random dataset")
n_clusters <- 4
set.seed(50551178)
km.rand <- kmeans(rsamp, n_clusters)
plot(rsamp, col=km.rand$cluster, main="K-Means sobre random dataset")
n_clusters <- 10
set.seed(50551178)
km.rand <- kmeans(rsamp, n_clusters)
plot(rsamp, col=km.rand$cluster, main="K-Means sobre random dataset")
n_clusters <- 100
set.seed(50551178)
km.rand <- kmeans(rsamp, n_clusters)
plot(rsamp, col=km.rand$cluster, main="K-Means sobre random dataset")
n_clusters <- 10
set.seed(50551178)
km.rand <- kmeans(rsamp, n_clusters)
plot(rsamp, col=km.rand$cluster, main="K-Means sobre random dataset")
Generamos algunos datos aleatorios
```{r p4_a}
set.seed(50551178)
wss <- (nrow(iris.scaled)-1) * sum(apply(iris.scaled, 2, var))  # para "1 cluster" usaremos la varianza como medida de error
for (i in 2:15) wss[i] <- sum(kmeans(iris.scaled,
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Número de clusters",
ylab="Error total")
```
-;
lhkjh
View(movies)
movies <- read.csv("~/Escritorio/Mineria/Movie-Score-Predictor/Datasets/movies.csv")
View(movies)
#Cambiar esto!
setwd("~/Escritorio/Mineria/Movie-Score-Predictor/Datasets")
ratings <- read.csv("~/Escritorio/Mineria/Proyecto/Desafio2/Filtrados/ratings.csv")
movies <- read.csv("~/Escritorio/Mineria/Movie-Score-Predictor/Datasets/movies.csv")
library(reshape2)
#Agregacion
mean_ratings <- dcast(ratings, movieId ~ .,mean)
colnames(mean_ratings)[2] = "movielens_score"
#Normalizacion
mean_ratings <- mean_ratings[!duplicated(mean_ratings[,1]),]
mean_ratings$movielens_score_normalized <- mean_ratings$movielens_score*2
#Join
movies <- merge(x = movies, y = mean_ratings, by = "movieId", all = TRUE)
View(movies)
movies <- movies[,c(1,2,3,5,6,7,8,9,10,11,12,13,14,15,4,16,17)]
View(movies)
View(movies)
aproximate_imbd_score <- movies[,c(15)]
aprox_imbd_score <- movies[,c(15)]
aproxi_movielens_score <- movies[,c(16)]
aproxi_movielens_score <- movies[,c(17)]
round(aprox_imbd_score)
aprox_imdb_score <- round(aprox_imbd_score)
aproxi_movielens_score <- round(aproxi_movielens_score)
aproxi_movielens_normalized_score<- round(aproxi_movielens_normalized_score)
aprox_imbd_score <- movies[,c(15)]
aproxi_movielens_score <- movies[,c(16)]
aproxi_movielens_normalized_score <- movies[,c(17)]
aprox_imdb_score <- round(aprox_imbd_score)
aproxi_movielens_score <- round(aproxi_movielens_score)
aproxi_movielens_normalized_score<- round(aproxi_movielens_normalized_score)
aprox_imdb_score <- movies[,c(15)]
aproxi_movielens_score <- movies[,c(16)]
aproxi_movielens_normalized_score <- movies[,c(17)]
aprox_imdb_score <- round(aprox_imdb_score)
aproxi_movielens_score <- round(aproxi_movielens_score)
aproxi_movielens_normalized_score<- round(aproxi_movielens_normalized_score)
aprox_imdb_score <- movies[,c(15)]
aprox_movielens_score <- movies[,c(16)]
aprox_movielens_normalized_score <- movies[,c(17)]
aprox_imdb_score <- round(aprox_imdb_score)
aprox_movielens_score <- round(aprox_movielens_score)
aprox_movielens_normalized_score<- round(aprox_movielens_normalized_score)
#Cambiar esto!
setwd("~/Escritorio/Mineria/Movie-Score-Predictor/Datasets")
ratings <- read.csv("~/Escritorio/Mineria/Proyecto/Desafio2/Filtrados/ratings.csv")
movies <- read.csv("~/Escritorio/Mineria/Movie-Score-Predictor/Datasets/movies.csv")
library(reshape2)
#Agregacion
mean_ratings <- dcast(ratings, movieId ~ .,mean)
colnames(mean_ratings)[2] = "movielens_score"
#Normalizacion
mean_ratings <- mean_ratings[!duplicated(mean_ratings[,1]),]
mean_ratings$movielens_score_normalized <- mean_ratings$movielens_score*2
#Join
movies <- merge(x = movies, y = mean_ratings, by = "movieId", all = TRUE)
movies <- movies[,c(1,2,3,5,6,7,8,9,10,11,12,13,14,15,4,16,17)]
#Aproximate
aprox_imdb_score <- movies[,c(15)]
aprox_movielens_score <- movies[,c(16)]
aprox_movielens_normalized_score <- movies[,c(17)]
aprox_imdb_score <- round(aprox_imdb_score)
aprox_movielens_score <- round(aprox_movielens_score)
aprox_movielens_normalized_score<- round(aprox_movielens_normalized_score)
movies$aprox_imdb_score <- aprox_imdb_score
movies$aprox_movielens_score <- round(aprox_movielens_score)
movies$aprox_movielens_normalized_score(aprox_movielens_normalized_score)
movies$aprox_imdb_score <- aprox_imdb_score
movies$aprox_movielens_score <- round(aprox_movielens_score)
movies$aprox_movielens_normalized_score <- round(aprox_movielens_normalized_score)
View(movies)
write.csv(movies_metadata_toSave, file = "movies.csv", row.names = FALSE)
write.csv(movies, file = "movies.csv", row.names = FALSE)
